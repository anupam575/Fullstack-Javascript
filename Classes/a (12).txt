Encapsulation Object-Oriented Programming (OOP) ‡§ï‡•Ä ‡§è‡§ï ‡§¨‡•á‡§∏‡§ø‡§ï ‡§î‡§∞ ‡§¨‡§π‡•Å‡§§ ‡§ú‡§º‡§∞‡•Ç‡§∞‡•Ä ‡§µ‡§ø‡§∂‡•á‡§∑‡§§‡§æ ‡§π‡•à‡•§ ‡§á‡§∏‡§ï‡§æ ‡§Æ‡§§‡§≤‡§¨ ‡§π‡•ã‡§§‡§æ ‡§π‡•à "‡§°‡•á‡§ü‡§æ ‡§î‡§∞ ‡§â‡§∏‡§∏‡•á ‡§ú‡•Å‡§°‡§º‡•á ‡§´‡§º‡§Ç‡§ï‡•ç‡§∂‡§Ç‡§∏ (methods) ‡§ï‡•ã ‡§è‡§ï ‡§Ø‡•Ç‡§®‡§ø‡§ü ‡§Æ‡•á‡§Ç ‡§¨‡§æ‡§Å‡§ß ‡§¶‡•á‡§®‡§æ"‡•§

‡§á‡§∏‡•á ‡§ê‡§∏‡•á ‡§∏‡§Æ‡§ù‡•ã ‡§ú‡•à‡§∏‡•á:

‡§ú‡•à‡§∏‡•á ‡§ï‡•ã‡§à Bhabhi ‡§Ö‡§™‡§®‡§æ ‡§∏‡§æ‡§∞‡§æ makeup, jewelry, ‡§î‡§∞ personal diary ‡§è‡§ï locker (box) ‡§Æ‡•á‡§Ç ‡§∞‡§ñ‡§§‡•Ä ‡§π‡•à‡§Ç, ‡§§‡§æ‡§ï‡§ø ‡§ï‡•ã‡§à ‡§î‡§∞ ‡§â‡§∏‡•á access ‡§®‡§æ ‡§ï‡§∞ ‡§∏‡§ï‡•á ‚Äì ‡§¨‡§∏ ‡§µ‡§π‡•Ä access ‡§ï‡§∞ ‡§∏‡§ï‡•á‡§Ç ‡§ú‡§¨ ‡§ö‡§æ‡§π‡•á‡§Ç‡•§

‡§¨‡§∏ ‡§â‡§∏‡•Ä ‡§§‡§∞‡§π Encapsulation ‡§Æ‡•á‡§Ç data (properties) ‡§î‡§∞ functions (methods) ‡§ï‡•ã ‡§è‡§ï class ‡§ï‡•á ‡§Ö‡§Ç‡§¶‡§∞ lock ‡§ï‡§∞ ‡§¶‡§ø‡§Ø‡§æ ‡§ú‡§æ‡§§‡§æ ‡§π‡•à ‡§î‡§∞ ‡§â‡§®‡•ç‡§π‡•á‡§Ç direct access ‡§®‡§π‡•Ä‡§Ç ‡§ï‡§∞‡§®‡•á ‡§¶‡§ø‡§Ø‡§æ ‡§ú‡§æ‡§§‡§æ‡•§

üì¶ ‡§â‡§¶‡§æ‡§π‡§∞‡§£ (Example in JavaScript):
javascript
Copy
Edit
class Bhabhi {
  #secretRecipe = "Rajma Chawal"; // private field

  constructor(name) {
    this.name = name;
  }

  // public method
  showRecipe() {
    console.log(`${this.name} ‡§ï‡•Ä secret recipe ‡§π‡•à: ${this.#secretRecipe}`);
  }

  // private data ‡§ï‡•ã ‡§¨‡§¶‡§≤‡§®‡•á ‡§ï‡§æ controlled ‡§§‡§∞‡•Ä‡§ï‡§æ
  updateRecipe(newRecipe) {
    if (newRecipe.length > 0) {
      this.#secretRecipe = newRecipe;
    } else {
      console.log("Invalid recipe!");
    }
  }
}

const bhabhi1 = new Bhabhi("Neha");
bhabhi1.showRecipe();  // Neha ‡§ï‡•Ä secret recipe ‡§π‡•à: Rajma Chawal

bhabhi1.updateRecipe("Paneer Butter Masala");
bhabhi1.showRecipe();  // Neha ‡§ï‡•Ä secret recipe ‡§π‡•à: Paneer Butter Masala

console.log(bhabhi1.#secretRecipe); // ‚ùå Error! Private field can't be accessed directly
üß† Encapsulation ‡§ï‡•á ‡§´‡§æ‡§Ø‡§¶‡•á (Benefits):
‚úÖ ‡§°‡•á‡§ü‡§æ ‡§∏‡§ø‡§ï‡•ç‡§Ø‡•ã‡§∞‡§ø‡§ü‡•Ä
‡§°‡•á‡§ü‡§æ ‡§ï‡•ã private ‡§¨‡§®‡§æ‡§ï‡§∞ ‡§∏‡•Ä‡§ß‡•á access ‡§∏‡•á ‡§¨‡§ö‡§æ‡§Ø‡§æ ‡§ú‡§æ‡§§‡§æ ‡§π‡•à‡•§

‚úÖ Control over data
‡§ï‡§ø‡§∏‡•Ä ‡§≠‡•Ä ‡§°‡•á‡§ü‡§æ ‡§ï‡•ã ‡§¨‡§¶‡§≤‡§®‡•á ‡§Ø‡§æ ‡§¶‡•á‡§ñ‡§®‡•á ‡§ï‡§æ ‡§§‡§∞‡•Ä‡§ï‡§æ ‡§π‡§Æ ‡§ñ‡•Å‡§¶ methods ‡§∏‡•á define ‡§ï‡§∞‡§§‡•á ‡§π‡•à‡§Ç‡•§

‚úÖ Code Maintainability
‡§Ö‡§ó‡§∞ ‡§Ö‡§Ç‡§¶‡§∞ ‡§ï‡§æ logic ‡§¨‡§¶‡§≤‡•á ‡§≠‡•Ä, ‡§¨‡§æ‡§π‡§∞ ‡§µ‡§æ‡§≤‡•á code ‡§ï‡•ã ‡§ï‡•ã‡§à ‡§´‡§∞‡•ç‡§ï ‡§®‡§π‡•Ä‡§Ç ‡§™‡§°‡§º‡•á‡§ó‡§æ‡•§

‚úÖ Loose Coupling
‡§è‡§ï class ‡§ï‡•á ‡§Ö‡§Ç‡§¶‡§∞ ‡§ú‡•ã ‡§π‡•à, ‡§µ‡•ã ‡§¨‡§æ‡§π‡§∞ ‡§µ‡§æ‡§≤‡•ã‡§Ç ‡§ï‡•ã ‡§®‡§π‡•Ä‡§Ç ‡§™‡§§‡§æ ‚Äî ‡§á‡§∏‡§∏‡•á ‡§ï‡§Æ dependencies ‡§π‡•ã‡§§‡•Ä ‡§π‡•à‡§Ç‡•§

üí° ‡§ï‡§π‡§æ‡§Ç Use ‡§π‡•ã‡§§‡§æ ‡§π‡•à Encapsulation?
Area	Use of Encapsulation
Banking App	Balance ‡§î‡§∞ transaction ‡§ï‡•ã hide ‡§ï‡§∞‡§®‡§æ
Game Development	Player ‡§ï‡•Ä health, power ‡§ï‡•ã private ‡§∞‡§ñ‡§®‡§æ
Chat App	Messages ‡§ï‡•ã encrypt ‡§ï‡§∞‡§ï‡•á access control ‡§¶‡•á‡§®‡§æ
Online Shopping	Product details ‡§ï‡•ã encapsulate ‡§ï‡§∞‡§®‡§æ
School Software	Student ‡§ï‡•Ä personal details ‡§ï‡•ã ‡§∏‡•Å‡§∞‡§ï‡•ç‡§∑‡§ø‡§§ ‡§∞‡§ñ‡§®‡§æ
üéâ Real-Life Analogy:
‡§ú‡•à‡§∏‡•á ‡§ï‡•ã‡§à Tiffin box ‡§ú‡•ã ‡§¨‡§Ç‡§¶ ‡§π‡•ã‡§§‡§æ ‡§π‡•à ‚Äì ‡§Ö‡§Ç‡§¶‡§∞ ‡§ï‡•ç‡§Ø‡§æ ‡§π‡•à ‡§Ø‡•á ‡§¨‡§æ‡§π‡§∞ ‡§∏‡•á ‡§ï‡•ã‡§à ‡§®‡§π‡•Ä‡§Ç ‡§ú‡§æ‡§®‡§§‡§æ‡•§ ‡§≤‡•á‡§ï‡§ø‡§® ‡§ñ‡§æ‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§π‡§Æ‡•á‡§Ç ‡§è‡§ï spoon (method) ‡§¶‡§ø‡§Ø‡§æ ‡§ú‡§æ‡§§‡§æ ‡§π‡•à‡•§ ‡§†‡•Ä‡§ï ‡§µ‡•à‡§∏‡§æ ‡§π‡•Ä ‡§π‡•à Encapsulation!