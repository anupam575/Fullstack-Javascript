Getters рдФрд░ Setters JavaScript рдореЗрдВ class рдпрд╛ object рдХреА properties рдХреЛ control рдХрд░рдиреЗ рдХрд╛ рддрд░реАрдХрд╛ рд╣реИрдВред

ЁЯФН Getter: рдХрд┐рд╕реА property рдХреЛ "рдкрдврд╝рдиреЗ" (read) рдХреЗ рд▓рд┐рдП рдЗрд╕реНрддреЗрдорд╛рд▓ рд╣реЛрддрд╛ рд╣реИред

тЬПя╕П Setter: рдХрд┐рд╕реА property рдХреЛ "рдмрджрд▓рдиреЗ" (update/write) рдХреЗ рд▓рд┐рдП рдЗрд╕реНрддреЗрдорд╛рд▓ рд╣реЛрддрд╛ рд╣реИред

рдпрд╣ methods рд╣реЛрддреЗ рд╣реИрдВ рдЬреЛ property рдХреА рддрд░рд╣ access рдХрд┐рдП рдЬрд╛рддреЗ рд╣реИрдВ тАФ рдпрд╛рдиреА рдмрд┐рдирд╛ () рд▓рдЧрд╛рдП!

ЁЯОп Syntax:
javascript
Copy
Edit
class Example {
  constructor(name) {
    this._name = name; // "_" рд╕реЗ рдкреНрд░рд╛рдЗрд╡реЗрдЯ рдЬреИрд╕рд╛ convention
  }

  // Getter
  get name() {
    return this._name;
  }

  // Setter
  set name(value) {
    this._name = value.toUpperCase(); // рдЬрдм value set рд╣реЛ, рддреЛ uppercase рдмрдирд╛ рджреЛ
  }
}

const obj = new Example("bhabhi");
console.log(obj.name); // ЁЯФН Getter call тАФ> bhabhi

obj.name = "sweetu";   // тЬПя╕П Setter call
console.log(obj.name); // SWEETU (setter рдиреЗ uppercase рдмрдирд╛ рджрд┐рдпрд╛)
тЬЕ рдХреНрдпреЛрдВ рдЗрд╕реНрддреЗрдорд╛рд▓ рдХрд░реЗрдВ?
Encapsulation (рдбреЗрдЯрд╛ рдХреЛ рдЫреБрдкрд╛рдирд╛ рдФрд░ рдХрдВрдЯреНрд░реЛрд▓ рдХрд░рдирд╛)

Validation (рдЧрд▓рдд value рдирд╛ рдЖрдиреЗ рджреЗрдирд╛)

рдХреНрд▓реАрди рдХреЛрдб тАУ Method рдЬреИрд╕реЗ behave рдХрд░рддреЗ рд╣реИрдВ, рд▓реЗрдХрд┐рди property рдХреА рддрд░рд╣ рджрд┐рдЦрддреЗ рд╣реИрдВред

ЁЯФе рдПрдХ рдорд╕реНрдд Example: Bhabhi рдХреА Kitty Points System
javascript
Copy
Edit
class Bhabhi {
  constructor() {
    this._points = 0;
  }

  // Getter тАУ points рдХреЛ рдкрдврд╝рдиреЗ рдХреЗ рд▓рд┐рдП
  get kittyPoints() {
    return `Bhabhi рдХреЗ рдкрд╛рд╕ ${this._points} points рд╣реИрдВ ЁЯМЯ`;
  }

  // Setter тАУ points рдХреЛ set рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП
  set kittyPoints(value) {
    if (value < 0) {
      console.log("Arre! Negative points allowed nahi hai ЁЯШд");
    } else {
      this._points = value;
      console.log(`Points update рд╣реЛ рдЧрдП! ЁЯОЙ`);
    }
  }
}

const sweetuBhabhi = new Bhabhi();

console.log(sweetuBhabhi.kittyPoints);  // ЁЯФН Getter call

sweetuBhabhi.kittyPoints = 50;         // тЬПя╕П Setter call
console.log(sweetuBhabhi.kittyPoints);  // рдлрд┐рд░ рд╕реЗ getter

sweetuBhabhi.kittyPoints = -20;        // тЭМ Invalid
ЁЯз╛ Output:
sql
Copy
Edit
Bhabhi рдХреЗ рдкрд╛рд╕ 0 points рд╣реИрдВ ЁЯМЯ
Points update рд╣реЛ рдЧрдП! ЁЯОЙ
Bhabhi рдХреЗ рдкрд╛рд╕ 50 points рд╣реИрдВ ЁЯМЯ
Arre! Negative points allowed nahi hai ЁЯШд
ЁЯОБ Extra Tips:
Best practice рд╣реИ рдХрд┐ рд╣рдо рдЕрдВрджрд░ рдХреЗ variables рдХреЛ _name, _points рдЬреИрд╕рд╛ рд▓рд┐рдЦреЗрдВред

Getter/Setter рджреЛрдиреЛрдВ рдХрд╛ рдирд╛рдо рдПрдХ рдЬреИрд╕рд╛ рд░рдЦ рд╕рдХрддреЗ рд╣реИрдВ (рдЬреИрд╕реЗ name), рд╡реЛ automatically call рд╣реЛ рдЬрд╛рдПрдВрдЧреЗред

ЁЯФЪ Summary Table:
ЁЯФз Feature	ЁЯУЛ Description
get	Property рдХреЛ read рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП method
set	Property рдХреЛ update рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП method
Syntax	get propName() { ... }, set propName(value) { ... }
Benefit	Data hiding, validation, formatting, clean syntax
рдЕрдЧрд░ рдЖрдк рдЪрд╛рд╣реЗрдВ рддреЛ рдореИрдВ рдПрдХ ЁЯОо "Getters/Setters Playground тАУ Bhabhi Edition" interactive app рдмрдирд╛ рд╕рдХрддрд╛ рд╣реВрдБ рдЬрд┐рд╕рдореЗрдВ рдЖрдк click рдХрд░рдХреЗ value set/change рдХрд░ рд╕рдХрддреЗ рд╣реИрдВ, рдФрд░ chat-style output рджрд┐рдЦреЗрдЧрд╛! рдмрдирд╛рдКрдБ? ЁЯШН

You said:
getter setter ko use he kyo kiya jata hai
ChatGPT said:
рдмрд╣реБрдд рдмрдврд╝рд┐рдпрд╛ рд╕рд╡рд╛рд▓! ЁЯЩМ
JavaScript рдореЗрдВ Getter рдФрд░ Setter рдХреЛ "рдпреВрдЬрд╝ рд╣реА рдХреНрдпреЛрдВ рдХрд┐рдпрд╛ рдЬрд╛рддрд╛ рд╣реИ?" тАФ рдЪрд▓реЛ рдЗрд╕реЗ рдЖрд╕рд╛рди рдФрд░ рдордЬреЗрджрд╛рд░ рдЕрдВрджрд╛рдЬрд╝ рдореЗрдВ рд╕рдордЭрддреЗ рд╣реИрдВ, рдЬреИрд╕реЗ Bhabhi Ji рд╕рдордЭрд╛ рд░рд╣реА рд╣реЛрдВ Kitty Party рдореЗрдВ ЁЯШД

ЁЯза рдореБрдЦреНрдп рдХрд╛рд░рдг: Getter рдФрд░ Setter рдХреНрдпреВрдБ рдЬрд╝рд░реВрд░реА рд╣реИрдВ?
тЬЕ 1. рдбреЗрдЯрд╛ рдХреЛ рдЫреБрдкрд╛рдирд╛ (Encapsulation)
рддрд╛рдХрд┐ object рдХреЗ рдЕрдВрджрд░ рдХреА values рд╕реАрдзреЗ access рдирд╛ рд╣реЛ, рдмрд▓реНрдХрд┐ control рд╣реЛрдХрд░ рдЬрд╛рдПред

javascript
Copy
Edit
this._salary = 50000; // рдЕрдВрджрд░ рд░рдЦрд╛ рдЕрд╕рд▓реА data
Getter/Setter рдХреЗ рдЬрд╝рд░рд┐рдП рдЗрд╕реЗ read/write рдХрд░рдиреЗ рджреЗрддреЗ рд╣реИрдВ тАФ рдкреВрд░рд╛ рдХрдВрдЯреНрд░реЛрд▓ рдЕрдкрдиреЗ рд╣рд╛рде рдореЗрдВ!

тЬЕ 2. Validation/Checking (рдЧрд▓рдд value рдХреЛ рд░реЛрдХрдирд╛)
javascript
Copy
Edit
set age(value) {
  if (value < 0) {
    console.log("Umra negative nahi ho sakti re baba! ЁЯШЕ");
  } else {
    this._age = value;
  }
}
тЮбя╕П рдмрд┐рдирд╛ setter рдХреЗ, рдХреЛрдИ рднреА рдХреБрдЫ рднреА assign рдХрд░ рд╕рдХрддрд╛ рд╣реИ (negative, string, etc.) тЭМ
тЮбя╕П Setter рд╕реЗ рд╣рдо check рд▓рдЧрд╛ рд╕рдХрддреЗ рд╣реИрдВ тЬЕ

тЬЕ 3. Data рдХреЛ Format рдХрд░рдирд╛ / Process рдХрд░рдирд╛
javascript
Copy
Edit
set name(value) {
  this._name = value.toUpperCase(); // auto uppercase
}
тЮбя╕П рдЬрд┐рд╕рд╕реЗ user рдХреБрдЫ рднреА рдбрд╛рд▓реЗ, storage рд╣рдореЗрд╢рд╛ рдПрдХ format рдореЗрдВ рд╣реЛ тЬЕ

тЬЕ 4. Method рдЬреИрд╕рд╛ Behavior, рд▓реЗрдХрд┐рди Property рдЬреИрд╕рд╛ Look
Getter/Setter methods рдХреА рддрд░рд╣ behave рдХрд░рддреЗ рд╣реИрдВ, рд▓реЗрдХрд┐рди call рдРрд╕реЗ рд╣реЛрддреЗ рд╣реИрдВ рдЬреИрд╕реЗ property рд╣реЛ:

javascript
Copy
Edit
obj.name // instead of obj.getName()
тЮбя╕П рдХреЛрдб рдХреНрд▓реАрди рдФрд░ readable рд░рд╣рддрд╛ рд╣реИред

тЬЕ 5. Future-proof Code
рдЕрдЧрд░ рдЖрдЬ рдЖрдк property рдХреЛ рд╕реАрдзреЗ access рдХрд░ рд░рд╣реЗ рд╣реЛ (obj.x = 5) тАФ рдХрд▓ рдХреЛ рдЖрдкрдХреЛ validation рд▓рдЧрд╛рдирд╛ рд╣реЛ, рддреЛ рдкреБрд░рд╛рдирд╛ рдХреЛрдб рдЯреВрдЯ рдЬрд╛рдПрдЧрд╛ тЭМ
рд▓реЗрдХрд┐рди рдЕрдЧрд░ getter/setter рдкрд╣рд▓реЗ рд╕реЗ рд╣реЛ тАФ future changes рдЖрд╕рд╛рдиреА рд╕реЗ рд╣реЛ рдЬрд╛рдПрдБрдЧреЗ тЬЕ

ЁЯдФ рдЕрдЧрд░ getter/setter рдирд╣реАрдВ рд╣реЛрдВ рддреЛ рдХреНрдпрд╛ рджрд┐рдХреНрдХрдд рд╣реЛрдЧреА?
тЭМ рдмрд┐рдирд╛ Getter/Setter	тЬЕ Getter/Setter рдХреЗ рд╕рд╛рде
рдХреЛрдИ рднреА value set рдХрд░ рджреЗрдЧрд╛	Validation possible
Format рдмрд┐рдЧрдбрд╝ рд╕рдХрддрд╛ рд╣реИ	Auto formatting
Data leakage	Data protection
рдХреЛрдИ рднреА рдмрд┐рдирд╛ рдкреВрдЫреЗ рдбреЗрдЯрд╛ рдмрджрд▓ рд╕рдХрддрд╛ рд╣реИ	рдкреВрд░реА security ЁЯЫбя╕П
ЁЯОЙ рдПрдХ рд▓рд╛рдЗрди рдореЗрдВ рдЬрд╡рд╛рдм:
Getter рдФрд░ Setter рдХрд╛ рдЗрд╕реНрддреЗрдорд╛рд▓ рдЗрд╕рд▓рд┐рдП рдХрд┐рдпрд╛ рдЬрд╛рддрд╛ рд╣реИ рддрд╛рдХрд┐ object рдХреА properties рдХреЛ рд╕реБрд░рдХреНрд╖рд┐рдд, рдирд┐рдпрдВрддреНрд░рд┐рдд рдФрд░ smart рддрд░реАрдХреЗ рд╕реЗ access рдХрд┐рдпрд╛ рдЬрд╛ рд╕рдХреЗред